openapi: "3.0.2"
info:
  title: "SI Client Proxy API"
  version: "2.0"
servers:
  - url: https://illiadev93-eval-test.apigee.net/sicp/api/v1

components:
  schemas:
    Client:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        balance:
          type: number
          format: double
        package:
          type: string
          format: uuid
    ClientInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        balance:
          type: number
          format: double
        package:
          $ref: "#/components/schemas/PackageInfo"
    Package:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        createdTime:
          type: string
          format: date-time
        productsIds:
          type: array
          items:
            type: string
            format: uuid
    PackageInfo:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
        createdTime:
          type: string
          format: date-time
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: double
    SelfLink:
      type: object
      properties:
        self:
          type: object
          properties:
            href:
              type: string
              format: url
              example: "https://api-server/entity/:itemId"
    CollectionLink:
      type: object
      properties:
        collection:
          type: object
          properties:
            href:
              type: string
              format: url
              example: "https://api-server/entity"
    PatchResponseData:
      type: object
      properties:
        message:
          type: string
          example: patch successfully adopted

  responses:
    401UnauthorizedError:
      description: Missing credentials
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized"
    403ForbiddenError:
      description: User does not have access to perform the action
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Access denided"
    404NotFoundError:
      description: Client not found
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Client not found"
    409AlreadyExists:
      description: Client already exists
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Client already exists"
    400BadRequest:
      description: Missing body params
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Parameter missing"
    500InternalError:
      description: Internal error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: Internal error

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: apikey

    bearerAuth:
      type: http
      scheme: bearer

paths:
  /catalog/packages/base:
    get:
      tags:
        - catalog
      security:
        - ApiKeyAuth: []
      summary: List of base Packages
      operationId: getBasePackagesList
      description: Get list of base Packages
      responses:
        "200":
          description: List of base Packages
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Package"
                  links:
                    type: object
                    properties:
                      collection:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "https://api-server/catalog/packages/base"
                  total:
                    type: number
                    format: int32
                    example: 2
        "401":
          $ref: "#/components/responses/401UnauthorizedError"
        "500":
          $ref: "#/components/responses/500InternalError"
  /catalog/products:
    get:
      tags:
        - catalog
      security:
        - ApiKeyAuth: []
      summary: List of Products
      operationId: getProductsList
      description: Get list of Products
      parameters:
        - in: query
          name: filter
          description: Filter by name
          schema:
            type: string
      responses:
        "200":
          description: List of Products
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Product"
                  links:
                    type: object
                    properties:
                      collection:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "https://api-server/catalog/products"
                  total:
                    type: number
                    format: int32
                    example: 2
        "401":
          $ref: "#/components/responses/401UnauthorizedError"
        "500":
          $ref: "#/components/responses/500InternalError"

  /clients/{id}/balance:
    patch:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - oAuth2ClientCredentials: []
      summary: Client balance topup
      operationId: balanceTopUp
      description: Top up balance for a client specified with "id"
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: number
                  format: double
                  example: 2000.9999
      responses:
        "200":
          description: current balance of the client
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      balance:
                        type: number
                        format: double
                        example: 2000.9999
                  link:
                    $ref: "#/components/schemas/SelfLink"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401UnauthorizedError"
        "403":
          $ref: "#/components/responses/403ForbiddenError"
        "404":
          $ref: "#/components/responses/404NotFoundError"
        "500":
          $ref: "#/components/responses/500InternalError"
  /clients/{id}/package:
    patch:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: Operation - Buy Package
      operationId: buyPackage
      description: Package data for Client
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                productIds:
                  type: array
                  items:
                    type: string
      responses:
        "200":
          description: Package ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      packageId:
                        type: string
                  links:
                    $ref: "#/components/schemas/SelfLink"
        "400":
          description: Missing parametrs
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "402":
          description: Payment require
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "404":
          description: Client not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /clients/{id}/info:
    get:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: Operation - Get all info about Client
      operationId: getClientInfo
      description: All info about Client
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: All info about Client
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/ClientInfo"
                  links:
                    $ref: "#/components/schemas/SelfLink"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /clients:
    get:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: List of Clients
      operationId: getClientsList
      description: Get list of Clients
      parameters:
        - in: query
          name: filter
          description: "Filter by name"
          schema:
            type: string
      responses:
        "200":
          description: A list of clients
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: "#/components/schemas/Client"
                  links:
                    type: object
                    properties:
                      collection:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "https://api-server/clients"
                  total:
                    type: number
                    format: int32
                    example: 2
        "401":
          $ref: "#/components/responses/401UnauthorizedError"
        "403":
          $ref: "#/components/responses/403ForbiddenError"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: Add a new client
      operationId: addClient
      description: add client to database
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: number
                  format: string
                  example: Client Name
      responses:
        "201":
          description: Client successfully added
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    $ref: "#/components/schemas/SelfLink"
        "400":
          $ref: "#/components/responses/400BadRequest"
        "401":
          $ref: "#/components/responses/401UnauthorizedError"
        "409":
          $ref: "#/components/responses/409AlreadyExists"
        "500":
          $ref: "#/components/responses/500InternalError"

  /clients/{id}:
    get:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: Get client by ID
      operationId: getClientById
      description: Get client by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: "#/components/schemas/Client"
                  links:
                    type: object
                    properties:
                      self:
                        type: object
                        properties:
                          href:
                            type: string
                            example: "https://api-server/clients/3fa85f64-5717-4562-b3fc-2c963f66afa6"
        "401":
          $ref: "#/components/responses/401UnauthorizedError"
        "403":
          $ref: "#/components/responses/403ForbiddenError"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    patch:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: Partially updates Client
      operationId: patchClient
      description: Partially updates Clients data
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        "200":
          description: Client name updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Client name successfully updated
                  links:
                    $ref: "#/components/schemas/SelfLink"
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tags:
        - clients
      security:
        - ApiKeyAuth: []
        - bearerAuth: []
      summary: Delete Client
      operationId: rmClient
      description: Delete existing Client
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Client successfully deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Client successfully deleted
        "500":
          description: Internal error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
