<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TargetEndpoint name="default">
    <Description/>
    <FaultRules/>
    <PreFlow name="PreFlow">
        <Request/>
        <Response/>
    </PreFlow>
    <PostFlow name="PostFlow">
        <Request/>
        <Response>
            <Step>
                <Name>JS-raiseTargetFault</Name>
            </Step>
        </Response>
    </PostFlow>
    <Flows>
        <Flow name="getBasePackagesList">
            <Description>List of base Packages</Description>
            <Request>
                <Step>
                    <Name>AM-SetGetBasePackagesListReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/catalog/packages/base") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getProductsList">
            <Description>List of Products</Description>
            <Request>
                <Step>
                    <Name>AM-SetGetProductsListReqInfo</Name>
                </Step>
                <Step>
                    <Name>AM-SetQueryParamsReqInfo</Name>
                    <Condition>urirequest.filter != null</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/catalog/products") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getClientsList">
            <Description>List of Clients</Description>
            <Request>
                <Step>
                    <Condition>accesstoken.ROLE != "admin"</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetGetClientsListReqInfo</Name>
                    <Condition>urirequest.filter = null</Condition>
                </Step>
                <Step>
                    <Name>AM-SetGetClientsFilteredListReqInfo</Name>
                    <Condition>urirequest.filter != null</Condition>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients" or proxy.pathsuffix MatchesPath "/clients/") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="getClientById">
            <Description>Get Client by ID</Description>
            <Request>        
                <Step>
                    <Condition>urirequest.id != accesstoken.CUID</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetGetClientByIdReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients/{clientId}" or proxy.pathsuffix MatchesPath "/clients/{clientId}/") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="buyPackage">
            <Description>Buy package for client</Description>
            <Request>
                <Step>
                    <Condition>urirequest.id != accesstoken.CUID</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetBuyPackageReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients/{clientId}/package" or proxy.pathsuffix MatchesPath "/clients/{clientId}/package/") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="addClient">
            <Description>Add new client</Description>
            <Request>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetAddClientReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients" or proxy.pathsuffix MatchesPath "/clients/") and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="getClientInfo">
            <Description>Get all info about Client</Description>
            <Request>
                <Step>
                    <Condition>(urirequest.id != accesstoken.CUID) and (accesstoken.ROLE != "admin")</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetGetClientInfoReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients/{clientId}/info" or proxy.pathsuffix MatchesPath "/clients/{clientId}/info/") and (request.verb = "GET")</Condition>
        </Flow>
        <Flow name="deleteClient">
            <Description>Delete existing Client</Description>
            <Request>
                <Step>
                    <Condition>(accesstoken.ROLE != "admin")</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetDeleteClientReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients/{clientId}" or proxy.pathsuffix MatchesPath "/clients/{clientId}/") and (request.verb = "DELETE")</Condition>
        </Flow>
        <Flow name="patchClient">
            <Description>Partially updates Clients data</Description>
            <Request>
                <Step>
                    <Condition>(urirequest.id != accesstoken.CUID) and (accesstoken.ROLE != "admin")</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetPatchClientReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients/{clientId}" or proxy.pathsuffix MatchesPath "/clients/{clientId}/") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="balanceTopUp">
            <Description>Top up balance for a client specified with "id"</Description>
            <Request>
                <Step>
                    <Condition>(urirequest.id != accesstoken.CUID) and (accesstoken.ROLE != "admin")</Condition>
                    <Name>RF-SetPremissionErrVar</Name>
                </Step>
                <Step>
                    <Name>FC-JWTGenerateRS256Flow</Name>
                </Step>
                <Step>
                    <Name>AM-SetBalanceTopupReqInfo</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "/clients/{clientId}/balance" or proxy.pathsuffix MatchesPath "/clients/{clientId}/balance/") and (request.verb = "PATCH")</Condition>
        </Flow>
        <Flow name="404NotFound">
            <Description>404NotFound</Description>
            <Request>
                <Step>
                    <Name>RF-SetNotFoundErrVar</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <HTTPTargetConnection>
        <Properties/>
        <LoadBalancer>
            <Server name="sicp-client-service"/>
        </LoadBalancer>
        <Path>/api/v2/{target-path}</Path>
    </HTTPTargetConnection>
</TargetEndpoint>